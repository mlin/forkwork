OASISFormat: 0.3
Name:        forkwork
Version:     0.3.2
Synopsis:    Fork child processes to perform work on multiple cores
Authors:     Mike Lin
Maintainers: mlin@mlin.net
License:     LGPL-2.1 with OCaml linking exception
Homepage:    https://github.com/mlin/forkwork
Description: ForkWork is intended for workloads that a master process can partition into independent jobs, each of which will typically take a while to execute (several seconds, or more). Also, the resulting values should not be too massive, since they must be marshalled for transmission back to the master process.
             
             Among the numerous tools for multicore parallelism available in the OCaml ecosystem, ForkWork fits somewhere in between Netmcore and Parmap. It's a bit easier to use than the former, and a bit more flexible than the latter.
Plugins:     DevFiles (0.3), META (0.3)

Library forkwork
  Path:            .
  BuildTools:      ocamlbuild
  BuildDepends:    unix
  Modules:         ForkWork
  InternalModules: Helpers

Executable unit_tests
  Path:           .
  MainIs:         tests.ml
  Install:        false
  Build$:         flag(tests)
  BuildTools:     ocamlbuild
  BuildDepends:   unix,kaputt,bigarray
  CompiledObject: best

Test test
  TestTools:   unit_tests
  Command:     $unit_tests

Document forkwork
  Title:                ForkWork API reference
  Type:                 OCamlbuild (0.3)
  InstallDir:           $docdir
  BuildTools:           ocamlbuild,ocamldoc
  XOCamlbuildPath:      .
  XOCamlbuildLibraries: forkwork
